@article{lang2007r,
  title={R as a Web Client--the RCurl package},
  author={Lang, Duncan Temple},
  journal={Journal of Statistical Software, http://www. jstatsoft. org},
  year={2007}
}

@phdthesis{fielding2000,
  title={Architectural styles and the design of network-based software architectures},
  author={Fielding, Roy Thomas},
  year={2000},
  school={University of California}
}

@manual{R,
  title = {R: A Language and Environment for Statistical Computing},
  author = {{R Core Team}},
  organization = {R Foundation for Statistical Computing},
  address = {Vienna, Austria},
  year = {2012},
  note = {{ISBN} 3-900051-07-0},
  url = {http://www.R-project.org/},
}

@article{warranty1996,
  title={1.47. 1 Available under license},
  author={Stenberg, Daniel},
  journal={Open Source Used In Cisco Unified Communications Manager 8.6. 2a},
  volume={5},
  pages={395},
  year={1996}
}

@inproceedings{dooley2012agave,
  title={Software-as-a-Service: The iPlant Foundation API},
  author={Dooley, Rion and Vaughn, Matthew and Stanzione, Dan and Terry, Steve and Skidmore, Edwin},
  booktitle = {5th IEEE Workshop on Many-Task Computing on Grids and Supercomputers},
  year = 2012,
  month = NOV,
  url = {http://datasys.cs.iit.edu/events/MTAGS12/p07.pdf},
  abstract = {The iPlant Foundation API (fAPI) is a hosted, Software-as-a-Service (SaaS) resource for the computational biology field. Unlike many other grid-based approaches to distributed infrastructure, the fAPI provides a holistic view of core computing concepts such as security, data, applications, jobs, and systems. It also provides the support services, such as unified accounting, provenance, metadata, and global events, needed to bind the core concepts together into a cohesive interface. Operating as a set of RESTful web services, the fAPI bridges the gap between the HPC and web worlds by supporting synchronous and asynchronous interfaces, web-based callbacks, unified access control lists (ACL), and a publication-subscription (pubsub) model that allows modern applications to interact with the underlying infrastructure using technologies and access patterns familiar to them. In its first year of operation, the fAPI has grown to support thousands of users across both the Plant and Animal Science domains. In this paper we describe the fAPI, its underlying architecture, and briefly describe its adoption before concluding with future plans.}
}